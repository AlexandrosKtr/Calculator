import tkinter as tk
from tkinter import messagebox

# Define the functions for the calculator

def button_click(number):
    current = entry.get()
    entry.delete(0, tk.END)
    entry.insert(tk.END, current + str(number))

def button_clear():
    entry.delete(0, tk.END)

def button_all_clear():
    entry.delete(0, tk.END)

def button_equal():
    try:
        result = str(eval(entry.get()))
        entry.delete(0, tk.END)
        entry.insert(tk.END, result)
    except Exception as e:
        messagebox.showerror("Error", "Invalid Input")

def button_operation(operator):
    current = entry.get()
    entry.delete(0, tk.END)
    entry.insert(tk.END, current + operator)

def button_percentage():
    try:
        current = float(entry.get())
        entry.delete(0, tk.END)
        entry.insert(tk.END, current / 100)
    except ValueError:
        messagebox.showerror("Error", "Invalid Input")

def button_sign_change():
    current = entry.get()
    if current:
        if current[0] == '-':
            entry.delete(0, tk.END)
            entry.insert(tk.END, current[1:])
        else:
            entry.delete(0, tk.END)
            entry.insert(tk.END, '-' + current)

# Create the main application window
root = tk.Tk()
root.title("iOS-like Calculator")
root.geometry("400x600")
root.resizable(False, False)
root.configure(bg='black')

# Create an entry widget for the input
entry = tk.Entry(root, width=17, borderwidth=0, font=('Arial', 30), justify='right', bg='black', fg='white')
entry.grid(row=0, column=0, columnspan=4, padx=10, pady=20)

# Button styles
button_font = ('Arial', 18)
button_bg = '#333333'
button_fg = 'white'
button_active_bg = '#666666'
operator_bg = '#ff9500'
operator_active_bg = '#ffa500'

# Define button texts and their grid positions
buttons = [
    ('C', 1, 0, button_all_clear, 'gray'), ('+/-', 1, 1, button_sign_change, 'gray'), ('%', 1, 2, button_percentage, 'gray'), ('/', 1, 3, button_operation, operator_bg),
    ('7', 2, 0, button_click, button_bg), ('8', 2, 1, button_click, button_bg), ('9', 2, 2, button_click, button_bg), ('*', 2, 3, button_operation, operator_bg),
    ('4', 3, 0, button_click, button_bg), ('5', 3, 1, button_click, button_bg), ('6', 3, 2, button_click, button_bg), ('-', 3, 3, button_operation, operator_bg),
    ('1', 4, 0, button_click, button_bg), ('2', 4, 1, button_click, button_bg), ('3', 4, 2, button_click, button_bg), ('+', 4, 3, button_operation, operator_bg),
    ('0', 5, 0, button_click, button_bg, 2), ('.', 5, 2, button_click, button_bg), ('=', 5, 3, button_equal, operator_bg),
]

# Create buttons and add them to the grid
for button in buttons:
    if len(button) == 5:
        text, row, col, command, bg = button
        colspan = 1
    else:
        text, row, col, command, bg, colspan = button

    btn = tk.Button(root, text=text, width=5, height=2, font=button_font, bg=bg, fg=button_fg, activebackground=button_active_bg if bg != operator_bg else operator_active_bg, command=lambda t=text, command=command: command(t) if t.isdigit() or t in [".", "+", "-", "*", "/"] else command())
    btn.grid(row=row, column=col, columnspan=colspan, padx=5, pady=5, sticky="nsew")
    if colspan == 2:
        btn.grid(columnspan=2)

# Make the buttons expand when the window is resized
for i in range(6):
    root.grid_rowconfigure(i, weight=1)
for i in range(4):
    root.grid_columnconfigure(i, weight=1)

# Run the main loop
root.mainloop()
